/*--------------------------------------------------
2. 업그레이드/ 테크 공유
대표 플레이어에게서 값을 받아온다. 저장된 값과 다를경우
팀원에게 적용
get level from headplayer, and check it
if it has difference, apply to teammates.
----------------------------------------------------*/
import shareTeam;
const UPGRADENUMBER 		= 55;
const TeamUpgradeCheck		= EUDArray(shareTeam.TeamNumber* UPGRADENUMBER);

function GetCurrentUpgrade(player, upgrade)
{//현재 업그레이드 수치를 반환
	const count = bread(0x58D2B0 + upgrade + player * (46 - 31 * (upgrade / 46)) + 0x207C * (upgrade / 46));
	return count;

}

function SetCurrentUpgrade(player, upgrade, count)
{//업그레이드 설정
	// set
	bwrite(0x58D2B0 + upgrade + player * (46 - 31 * (upgrade / 46)) + 0x207C * (upgrade / 46), count);
}


function GetSharedUpgrade(teamID, upgradeNumber)
{// 업그레이드 연동

	//Get P1, P4 upgrade(생산자가 업글하니까) 
	const upgradeVal = GetCurrentUpgrade(teamID*shareTeam.TeamManNumber, upgradeNumber);
	return upgradeVal;
}

function SetSharedUpgrade(teamID)
{
	for(var j=1; j<shareTeam.TeamManNumber; j++)
	{//p2~p3, p5~p6
		for(var i=0; i<UPGRADENUMBER; i++)
		{//1~ end
			//get previous level
			const savedUpgradeLevel = TeamUpgradeCheck[i+ UPGRADENUMBER*teamID];
			//upgrades with 1 is max (16 ~)
			if(savedUpgradeLevel == 1 && i > 16){
				return;
			}
			// upgrades with 1~3 (1~15)
			else
			{
				//get level from p1, p4
				const teamUpgradeLevel = GetSharedUpgrade(teamID, i);
				if(savedUpgradeLevel != teamUpgradeLevel)
				{
					// set upgrade
					SetCurrentUpgrade(teamID*shareTeam.TeamManNumber+j, i, teamUpgradeLevel);
					TeamUpgradeCheck[i+ UPGRADENUMBER*teamID] = teamUpgradeLevel;
				}
			}
		}
	}
}